// キーの座標変換に使うマクロ（RC(row, column) など）を読み込み
#include <dt-bindings/zmk/matrix_transform.h>

// 物理レイアウトの構造を記述するためのベース定義ファイルをインクルード
#include <physical_layouts.dtsi>

/ {
    // 使用する物理レイアウト（physical_layout0）を選択肢として指定
    chosen {
        zmk,physical-layout = &physical_layout0;
    };

    // 実際の物理レイアウトの定義
    physical_layout0: physical_layout0 {
        compatible = "zmk,physical-layout";  // ZMKが物理レイアウトとして認識するための互換名
        display-name = "Futaba Keyboard";  // GUI表示などでのキーボード名
        kscan = <&kscan0>;  // スキャン対象のキーマトリクスノード
        transform = <&default_transform>;  // 論理キー→物理キーの変換ルールを指定

        // 各キーの物理的な位置とサイズを定義（キースイッチ単位）
        // フォーマット: <幅 高さ X座標 Y座標 回転角度 回転基準X 回転基準Y>
        keys
            = <&key_physical_attrs 100 100    0    0       0     0     0>  // 1列目, 1行目
            , <&key_physical_attrs 100 100  100    0       0     0     0>  // 2列目, 1行目
            , <&key_physical_attrs 100 100  300    0       0     0     0>  // 3列目, 1行目（←200開けてる？）
            , <&key_physical_attrs 100 100  400    0       0     0     0>  // 4列目, 1行目
            , <&key_physical_attrs 100 100    0  100       0     0     0>  // 1列目, 2行目
            , <&key_physical_attrs 100 100  100  100       0     0     0>  // 2列目, 2行目
            , <&key_physical_attrs 100 100  300  100       0     0     0>  // 3列目, 2行目（←200開けてる？）
            , <&key_physical_attrs 100 100  400  100       0     0     0>  // 4列目, 2行目
            ;
    };

    // 行列変換ルール（キーの論理配列と物理レイアウトを一致させる）
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";  // ZMKが認識できる変換形式
        columns = <4>;  // 列数：4
        rows = <2>;     // 行数：2

        // 論理行列上の位置（row-column）とキー番号を対応付け
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3)  // 1行目（上段）
            RC(1,0) RC(1,1) RC(1,2) RC(1,3)  // 2行目（下段）
        >;
    };

    // GPIOマトリクスによるキー入力スキャンの定義
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";  // GPIOを用いた行列スキャン方式
        diode-direction = "col2row";  // ダイオードの向き（列→行）

        // 行ピンの定義（2本）：XIAOのD10とD9を使用
        row-gpios
            = <&xiao_d 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 行0
            , <&xiao_d 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>; // 行1
    };
};
